import os
import logging
import time

from cozypy.client import CozytouchClient
from cozypy.constant import DeviceCommand
from cozypy.exception import CozytouchException
from cozypy.objects import CozytouchHeater

logger = logging.getLogger("cozytouch.examples")


clientId = os.environ['COZYTOUTCH_CLIENT_ID']
clientPassword = os.environ['COZYTOUTCH_CLIENT_PASSWORD']

try:
    client = CozytouchClient(clientId, clientPassword)
    heater = CozytouchHeater({
        "deviceURL": "io://0812-9894-4518/10071767#1",
        "states": [
            {'name': 'core:NameState', 'type': 3, 'value': 'I2G_Actuator'},
            {'name': 'core:VersionState', 'type': 3, 'value': '48373431303038202020'},
            {'name': 'core:PriorityLockTimerState', 'type': 1, 'value': 0},
            {'name': 'io:TargetHeatingLevelState', 'type': 3, 'value': 'eco'},
            {'name': 'core:OnOffState', 'type': 3, 'value': 'on'},
            {'name': 'core:StatusState', 'type': 3, 'value': 'available'},
            {'name': 'core:RSSILevelState', 'type': 2, 'value': 78.0}, {'name': 'core:IdentifierState', 'type': 3, 'value': '00000000'}, {'name': 'io:MaximumHeatingLevelState', 'type': 3, 'value': 'unknown'}, {'name': 'io:TimerForTransitoryStateState', 'type': 1, 'value': 65535}, {'name': 'core:ComfortRoomTemperatureState', 'type': 1, 'value': 19}, {'name': 'core:EcoRoomTemperatureState', 'type': 1, 'value': 9}, {'name': 'core:OperatingModeState', 'type': 3, 'value': 'auto'}, {'name': 'core:OccupancyActivationState', 'type': 3, 'value': 'inactive'}, {'name': 'core:MaximumTargetTemperatureState', 'type': 2, 'value': 28.0}, {'name': 'core:MaximumHeatingTargetTemperatureState', 'type': 2, 'value': 28.0}, {'name': 'core:TargetTemperatureState', 'type': 2, 'value': 19.0}, {'name': 'io:SetpointLoweringTemperatureInProgModeState', 'type': 2, 'value': 9.0}, {'name': 'core:OpenWindowDetectionActivationState', 'type': 3, 'value': 'active'}, {'name': 'io:InternalExternalSchedulingTypeState', 'type': 3, 'value': 'internal'}, {'name': 'core:DateTimeState', 'type': 11, 'value': {'minute': 11, 'second': 45, 'weekday': 4, 'month': 11, 'year': 2018, 'hour': 22, 'day': 16}}, {'name': 'io:LocalLeadTimeState', 'type': 1, 'value': 2097}, {'name': 'core:RegulationModeState', 'type': 3, 'value': 'none'}, {'name': 'core:ManufacturerNameState', 'type': 3, 'value': 'Thermor'}, {'name': 'io:ModelState', 'type': 3, 'value': 'INGENIO H PI-io'}, {'name': 'io:PowerState', 'type': 1, 'value': 1000}, {'name': 'io:TensionState', 'type': 1, 'value': 230}, {'name': 'core:DerogatedTargetTemperatureState', 'type': 2, 'value': 0.0}, {'name': 'io:NativeFunctionalLevelState', 'type': 3, 'value': 'Top'}, {'name': 'io:TemperatureProbeCalibrationOffsetState', 'type': 2, 'value': 0.0}, {'name': 'io:CurrentWorkingRateState', 'type': 2, 'value': 0.0}, {'name': 'io:CumulatedLoweringState', 'type': 2, 'value': 0.0}, {'name': 'io:RoomDeletionThresholdState', 'type': 3, 'value': '-2Â°C'}, {'name': 'io:EffectiveTemperatureSetpointState', 'type': 2, 'value': 16.0}, {'name': 'io:ControllerAddressState', 'type': 1, 'value': 10071766}, {'name': 'io:ExpectedPresenceState', 'type': 3, 'value': '23:00'}, {'name': 'io:AutoProgramState', 'type': 11, 'value': {'wednesday': ['CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_1', 'CONF_NIV2', 'CONF_NIV2', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_NIV3', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_3_NIV1', 'CONF_NIV2'], 'monday': ['CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV1', 'CONF_NIV1', 'CONF_NIV2', 'CONF_NIV2', 'CONF_2', 'CONF_2', 'CONF_NIV2', 'CONF_2', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV2', 'CONF_2', 'CONF_2', 'CONF_2', 'CONF_NIV2', 'CONF_NIV2', 'CONF_2', 'CONF_2', 'CONF_2', 'CONF_2', 'CONF_NIV2', 'CONF_NIV2', 'CONF_2', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_2'], 'thursday': ['CONF_3_NIV1', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV1', 'CONF_1', 'CONF_NIV3', 'CONF_1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_3_NIV1', 'CONF_1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_1', 'CONF_NIV3', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV3', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV1'], 'sunday': ['CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV1', 'CONF_NIV1', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV3', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_NIV3', 'CONF_2', 'CONF_2', 'CONF_NIV2', 'CONF_2', 'CONF_2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_3_NIV2'], 'saturday': ['CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_NIV2', 'CONF_NIV2', 'CONF_1', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_1', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2'], 'anticipTime': 2097, 'friday': ['CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV3', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV1', 'CONF_NIV3', 'CONF_NIV3', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_NIV2', 'CONF_NIV2', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_NIV2', 'CONF_NIV2', 'CONF_NIV1', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_NIV3', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_3_NIV2', 'CONF_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1'], 'tuesday': ['CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_NIV3', 'CONF_1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_2', 'CONF_3_NIV1', 'CONF_2', 'CONF_2', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_2', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV2', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_3_NIV1', 'CONF_1', 'CONF_1', 'CONF_1', 'CONF_3_NIV1'], 'anticipNb': 16}}, {'name': 'core:TimeProgramState', 'type': 10, 'value': [{'monday': [{'start': '05:00', 'end': '09:00'}, {'start': '17:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}]}, {'tuesday': [{'start': '05:00', 'end': '09:00'}, {'start': '17:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}]}, {'wednesday': [{'start': '05:00', 'end': '09:00'}, {'start': '17:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}]}, {'thursday': [{'start': '05:00', 'end': '09:00'}, {'start': '17:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}]}, {'friday': [{'start': '05:00', 'end': '09:00'}, {'start': '17:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}]}, {'saturday': [{'start': '05:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}, {'start': '00:00', 'end': '00:00'}]}, {'sunday': [{'start': '05:00', 'end': '23:00'}, {'start': '00:00', 'end': '00:00'}, {'start': '00:00', 'end': '00:00'}]}]}]
    })
    heater.client = client
    heater.update()
    for state in heater.supported_states:
        print("\t\t", state.value, heater.get_state(state))

    heater.set_comfort_temperature(19)
    heater.set_eco_temperature(15)
    heater.set_operation_mode("comfort")
    heater.update()
    for state in heater.supported_states:
        print("\t\t", state.value, heater.get_state(state))

except CozytouchException as e:
    logger.exception(e)